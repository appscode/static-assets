{
  "id": "performance",
  "title": "Ensuring Database Performance on Kubernetes",
  "meta": "Ensure your Database Performance on Kubernetes using KubeDB. KubeDB provides a bunch of features that increase your database performance on Kubernetes.",
  "innerContent": [
    {
      "id": 1,
      "url": "database-performance-kubernetes",
      "title": "Cloud agnostic Storage",
      "description": "Kubernetes provides a powerful cloud agnostic storage abstraction that enables Kubernetes workloads to use a wide variety of block and file storage to persist data. KubeDB uses Persistent Volume Claims (PVC) to dynamically provision disks for database instances. Using appropriately defined StorageClasses, KubeDB provisioned database instances are designed to scale from small development workloads up to performance-intensive workloads on private and public cloud environments.",
      "img": "/assets/images/features/illustrations/cloud-agnostic-storage.jpg"
    },
    {
      "id": 2,
      "title": "Provisioned IOPS (SSD) Storage",
      "description": "Cloud providers like AWS provide provisioned IOPS Storage which is an SSD-backed storage option designed to deliver fast, predictable, and consistent I/O performance. You specify an IOPS rate when creating a StorageClass, and KubeDB provisions disks at that IOPS rate for the lifetime of the database instance. This storage type is optimized for I/O-intensive transactional (OLTP) database workloads.",
      "img": "/assets/images/features/illustrations/provisioned-iops-storage.jpg"
    },
    {
      "id": 3,
      "title": "Cloud-Native Storage",
      "description": "There is a growing ecosystem of cloud-native storage solutions like Rook (Ceph), OpenEBS, Portworx that provide network attached storage for containerized workloads. These systems can provide block storage via CSI drivers in cloud or bare metal clusters. KubeDB can provision database instances that utilize these storage systems using standard Kubernetes abstractions.",
      "img": "/assets/images/features/illustrations/cloud-native.png"
    },
    {
      "id": 4,
      "title": "Local Persistent Volume",
      "description": "Most Kubernetes Storage systems enable remote storage which persists data independent of the Kubernetes node where the data originated. Remote storage usually can not offer the consistent high performance guarantees of local directly-attached storage. Using the Local Persistent Volume plugin, KubeDB can consume high performance local storage seamlessly. However, local volumes are still subject to the availability of the underlying node. HA database instances using local volumes are able to tolerate this reduced availability, as well as automatically recover from potential data loss, depending on the durability characteristics of the underlying disk.",
      "img": "/assets/images/features/illustrations/local-persistent-volume.jpg"
    },
    {
      "id": 5,
      "title": "Low Latency",
      "description": "KubeDB runs your database instances inside the same pod network as the workloads that use these database instances. Unlike database instances managed by DBaaS vendors, there is no cross VPC latency between your database instances and your applications.",
      "img": "/assets/images/features/illustrations/low-latency.jpg"
    }
  ]
}
