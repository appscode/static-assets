apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
  name: capa-eks-bootstrap-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
    controller-gen.kubebuilder.io/version: v0.2.9
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    cluster.x-k8s.io/v1alpha2: v1alpha2
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: eksconfigs.bootstrap.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: bootstrap.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: EKSConfig
    listKind: EKSConfigList
    plural: eksconfigs
    singular: eksconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Bootstrap configuration is ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Name of Secret containing bootstrap data
      jsonPath: .status.dataSecretName
      name: DataSecretName
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: EKSConfig is the Schema for the eksconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EKSConfigSpec defines the desired state of EKSConfig
            properties:
              kubeletExtraArgs:
                additionalProperties:
                  type: string
                description: Passes the kubelet args into the EKS bootstrap script
                type: object
            type: object
          status:
            description: EKSConfigStatus defines the observed state of EKSConfig
            properties:
              conditions:
                description: Conditions defines current service state of the EKSConfig.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              dataSecretName:
                description: DataSecretName is the name of the secret that stores the bootstrap data script.
                type: string
              failureMessage:
                description: FailureMessage will be set on non-retryable errors
                type: string
              failureReason:
                description: FailureReason will be set on non-retryable errors
                type: string
              observedGeneration:
                description: ObservedGeneration is the latest generation observed by the controller.
                format: int64
                type: integer
              ready:
                description: Ready indicates the BootstrapData secret is ready to be consumed
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
    controller-gen.kubebuilder.io/version: v0.2.9
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    cluster.x-k8s.io/v1alpha2: v1alpha2
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: eksconfigtemplates.bootstrap.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: bootstrap.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: EKSConfigTemplate
    listKind: EKSConfigTemplateList
    plural: eksconfigtemplates
    singular: eksconfigtemplate
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: EKSConfigTemplate is the Schema for the eksconfigtemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EKSConfigTemplateSpec defines the desired state of EKSConfigTemplate
            properties:
              template:
                description: EKSConfigTemplateResource defines the Template structure
                properties:
                  spec:
                    description: EKSConfigSpec defines the desired state of EKSConfig
                    properties:
                      kubeletExtraArgs:
                        additionalProperties:
                          type: string
                        description: Passes the kubelet args into the EKS bootstrap script
                        type: object
                    type: object
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    ${AWS_CONTROLLER_IAM_ROLE/#arn/eks.amazonaws.com/role-arn: arn}
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-leader-election-role
  namespace: capa-eks-bootstrap-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - eksconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - eksconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - machinepools
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - awsmanagedcontrolplanes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - exp.cluster.x-k8s.io
  resources:
  - machinepools
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-leader-election-rolebinding
  namespace: capa-eks-bootstrap-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capa-eks-bootstrap-leader-election-role
subjects:
- kind: ServiceAccount
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capa-eks-bootstrap-manager-role
subjects:
- kind: ServiceAccount
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capa-eks-bootstrap-proxy-role
subjects:
- kind: ServiceAccount
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
  name: capa-eks-bootstrap-controller-manager-metrics-service
  namespace: capa-eks-bootstrap-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: bootstrap-eks
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: bootstrap-eks
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --feature-gates=MachinePool=${EXP_MACHINE_POOL:=false}
        command:
        - /manager
        image: gcr.io/k8s-staging-cluster-api-aws/eks-bootstrap-controller:v0.6.4
        imagePullPolicy: Always
        name: manager
      metadata:
        annotations:
          iam.amazonaws.com/role: ${AWS_CONTROLLER_IAM_ROLE:=""}
      securityContext:
        fsGroup: 1000
      serviceAccountName: capa-eks-bootstrap-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
