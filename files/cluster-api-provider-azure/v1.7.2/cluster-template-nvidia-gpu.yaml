apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    gpu: nvidia
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AzureCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  identityRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AzureClusterIdentity
    name: ${CLUSTER_IDENTITY_NAME}
  location: ${AZURE_LOCATION}
  networkSpec:
    subnets:
    - name: control-plane-subnet
      role: control-plane
    - name: node-subnet
      natGateway:
        name: node-natgateway
      role: node
    vnet:
      name: ${AZURE_VNET_NAME:=${CLUSTER_NAME}-vnet}
  resourceGroup: ${AZURE_RESOURCE_GROUP:=${CLUSTER_NAME}}
  subscriptionID: ${AZURE_SUBSCRIPTION_ID}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        extraVolumes:
        - hostPath: /etc/kubernetes/azure.json
          mountPath: /etc/kubernetes/azure.json
          name: cloud-config
          readOnly: true
        timeoutForControlPlane: 20m
      controllerManager:
        extraArgs:
          allocate-node-cidrs: "false"
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
          cluster-name: ${CLUSTER_NAME}
        extraVolumes:
        - hostPath: /etc/kubernetes/azure.json
          mountPath: /etc/kubernetes/azure.json
          name: cloud-config
          readOnly: true
      etcd:
        local:
          dataDir: /var/lib/etcddisk/etcd
          extraArgs:
            quota-backend-bytes: "8589934592"
    diskSetup:
      filesystems:
      - device: /dev/disk/azure/scsi1/lun0
        extraOpts:
        - -E
        - lazy_itable_init=1,lazy_journal_init=1
        filesystem: ext4
        label: etcd_disk
      - device: ephemeral0.1
        filesystem: ext4
        label: ephemeral0
        replaceFS: ntfs
      partitions:
      - device: /dev/disk/azure/scsi1/lun0
        layout: true
        overwrite: false
        tableType: gpt
    files:
    - contentFrom:
        secret:
          key: control-plane-azure.json
          name: ${CLUSTER_NAME}-control-plane-azure-json
      owner: root:root
      path: /etc/kubernetes/azure.json
      permissions: "0644"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          azure-container-registry-config: /etc/kubernetes/azure.json
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        name: '{{ ds.meta_data["local_hostname"] }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          azure-container-registry-config: /etc/kubernetes/azure.json
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        name: '{{ ds.meta_data["local_hostname"] }}'
    mounts:
    - - LABEL=etcd_disk
      - /var/lib/etcddisk
    postKubeadmCommands: []
    preKubeadmCommands: []
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureMachineTemplate
      name: ${CLUSTER_NAME}-control-plane
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  template:
    spec:
      dataDisks:
      - diskSizeGB: 256
        lun: 0
        nameSuffix: etcddisk
      osDisk:
        diskSizeGB: 128
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_CONTROL_PLANE_MACHINE_TYPE}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureClusterIdentity
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move-hierarchy: "true"
  name: ${CLUSTER_IDENTITY_NAME}
  namespace: default
spec:
  allowedNamespaces: {}
  clientID: ${AZURE_CLIENT_ID}
  clientSecret:
    name: ${AZURE_CLUSTER_IDENTITY_SECRET_NAME}
    namespace: ${AZURE_CLUSTER_IDENTITY_SECRET_NAMESPACE}
  tenantID: ${AZURE_TENANT_ID}
  type: ServicePrincipal
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachineTemplate
        name: ${CLUSTER_NAME}-md-0
      version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      osDisk:
        diskSizeGB: 128
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_NODE_MACHINE_TYPE}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      files:
      - contentFrom:
          secret:
            key: worker-node-azure.json
            name: ${CLUSTER_NAME}-md-0-azure-json
        owner: root:root
        path: /etc/kubernetes/azure.json
        permissions: "0644"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            azure-container-registry-config: /etc/kubernetes/azure.json
            cloud-config: /etc/kubernetes/azure.json
            cloud-provider: azure
          name: '{{ ds.meta_data["local_hostname"] }}'
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-gpu-operator
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      gpu: nvidia
  resources:
  - kind: ConfigMap
    name: nvidia-clusterpolicy-crd
  - kind: ConfigMap
    name: nvidia-gpu-operator-components
  strategy: ApplyOnce
---
apiVersion: v1
data:
  clusterpolicy-crd.yaml: |+
    ---
    # Source: gpu-operator/crds/nvidia.com_clusterpolicies_crd.yaml
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: clusterpolicies.nvidia.com
    spec:
      group: nvidia.com
      names:
        kind: ClusterPolicy
        listKind: ClusterPolicyList
        plural: clusterpolicies
        singular: clusterpolicy
      scope: Cluster
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            description: ClusterPolicy is the Schema for the clusterpolicies API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: ClusterPolicySpec defines the desired state of ClusterPolicy
                properties:
                  daemonsets:
                    description: Daemonset defines common configuration for all Daemonsets
                    properties:
                      priorityClassName:
                        type: string
                      tolerations:
                        description: 'Optional: Set tolerations'
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified, allowed
                                values are NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration applies
                                to. Empty means match all taint keys. If the key is empty,
                                operator must be Exists; this combination means to match
                                all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship to
                                the value. Valid operators are Exists and Equal. Defaults
                                to Equal. Exists is equivalent to wildcard for value,
                                so that a pod can tolerate all taints of a particular
                                category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period of
                                time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the taint
                                forever (do not evict). Zero and negative values will
                                be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration matches
                                to. If the operator is Exists, the value should be empty,
                                otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  dcgm:
                    description: DCGM component spec
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      enabled:
                        description: Enabled indicates if deployment of DCGM hostengine
                          as a separate pod is enabled.
                        type: boolean
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      hostPort:
                        description: 'HostPort represents host port that needs to be bound
                          for DCGM engine (Default: 5555)'
                        format: int32
                        type: integer
                      image:
                        description: DCGM image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      repository:
                        description: DCGM image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      version:
                        description: DCGM image tag
                        type: string
                    type: object
                  dcgmExporter:
                    description: DCGMExporter spec
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      config:
                        description: 'Optional: Custom metrics configuration for DCGM
                          exporter'
                        properties:
                          name:
                            description: ConfigMap name with file dcgm-metrics.csv for
                              metrics to be collected by DCGM exporter
                            type: string
                        type: object
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: DCGM image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      repository:
                        description: DCGM image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      version:
                        description: DCGM image tag
                        type: string
                    type: object
                  devicePlugin:
                    description: DevicePlugin component spec
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: DevicePlugin image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      repository:
                        description: DevicePlugin image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      version:
                        description: DevicePlugin image tag
                        type: string
                    type: object
                  driver:
                    description: Driver component spec
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      certConfig:
                        description: 'Optional: Custom certificates configuration for
                          driver container'
                        properties:
                          name:
                            type: string
                        type: object
                      enabled:
                        description: Enabled indicates if deployment of driver through
                          operator is enabled
                        type: boolean
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: Driver image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      kernelModuleConfig:
                        description: 'Optional: Kernel module configuration parameters
                          for the NVIDIA driver'
                        properties:
                          name:
                            type: string
                        type: object
                      licensingConfig:
                        description: 'Optional: Licensing configuration for vGPU drivers'
                        properties:
                          configMapName:
                            type: string
                          nlsEnabled:
                            description: NLSEnabled indicates if NLS is used for licensing.
                            type: boolean
                        type: object
                      manager:
                        description: Manager represents configuration for driver manager
                          initContainer
                        properties:
                          env:
                            description: 'Optional: List of environment variables'
                            items:
                              description: EnvVar represents an environment variable present
                                in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables
                                    in the container and any service environment variables.
                                    If a variable cannot be resolved, the reference in
                                    the input string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for escaping the
                                    $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                    the string literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of whether the
                                    variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or
                                            its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in
                                            the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes,
                                            optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of
                                            the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's
                                        namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its
                                            key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: Image represents Driver-Manager image name
                            pattern: '[a-zA-Z0-9\-]+'
                            type: string
                          imagePullPolicy:
                            description: Image pull policy
                            type: string
                          imagePullSecrets:
                            description: Image pull secrets
                            items:
                              type: string
                            type: array
                          repository:
                            description: Repository represents Driver-Manager repository
                              path
                            type: string
                          version:
                            description: Version represents Driver-Manager image tag(version)
                            type: string
                        type: object
                      rdma:
                        description: GPUDirectRDMASpec defines the properties for nv_peer_mem
                          deployment
                        properties:
                          enabled:
                            description: Enabled indicates if GPUDirect RDMA is enabled
                              through GPU operator
                            type: boolean
                          useHostMofed:
                            description: UseHostMOFED indicates to use MOFED drivers directly
                              installed on the host to enable GPUDirect RDMA
                            type: boolean
                        type: object
                      repoConfig:
                        description: 'Optional: Custom repo configuration for driver container'
                        properties:
                          configMapName:
                            type: string
                        type: object
                      repository:
                        description: Driver image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      use_ocp_driver_toolkit:
                        description: UseOpenShiftDriverToolkit indicates if DriverToolkit
                          image should be used on OpenShift to build and install driver
                          modules
                        type: boolean
                      version:
                        description: Driver image tag
                        type: string
                      virtualTopology:
                        description: 'Optional: Virtual Topology Daemon configuration
                          for vGPU drivers'
                        properties:
                          config:
                            description: 'Optional: Config name representing virtual topology
                              daemon configuration file nvidia-topologyd.conf'
                            type: string
                        type: object
                    type: object
                  gds:
                    description: GPUDirectStorage defines the spec for GDS components(Experimental)
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      enabled:
                        description: Enabled indicates if GPUDirect Storage is enabled
                          through GPU operator
                        type: boolean
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: Driver image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      repository:
                        description: Driver image repository
                        type: string
                      version:
                        description: Driver image tag
                        type: string
                    type: object
                  gfd:
                    description: GPUFeatureDiscovery spec
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: GFD image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      repository:
                        description: GFD image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      version:
                        description: GFD image tag
                        type: string
                    type: object
                  mig:
                    description: MIG spec
                    properties:
                      strategy:
                        description: 'Optional: MIGStrategy to apply for GFD and Device-Plugin'
                        enum:
                        - none
                        - single
                        - mixed
                        type: string
                    type: object
                  migManager:
                    description: MIGManager for configuration to deploy MIG Manager
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      config:
                        description: 'Optional: Custom mig-parted configuration for MIG
                          Manager container'
                        properties:
                          name:
                            description: ConfigMap name
                            type: string
                        type: object
                      enabled:
                        description: Enabled indicates if deployment of mig-manager is
                          enabled
                        type: boolean
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      gpuClientsConfig:
                        description: 'Optional: Custom gpu-clients configuration for MIG
                          Manager container'
                        properties:
                          name:
                            description: ConfigMap name
                            type: string
                        type: object
                      image:
                        description: mig-manager image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      repository:
                        description: mig-manager image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      version:
                        description: mig-manager image tag
                        type: string
                    type: object
                  nodeStatusExporter:
                    description: NodeStatusExporter spec
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      enabled:
                        description: Enabled indicates if deployment of node-status-exporter
                          is enabled.
                        type: boolean
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: node-status-exporter image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      repository:
                        description: node-status-exporter image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      version:
                        description: node-status-exporter image tag
                        type: string
                    type: object
                  operator:
                    description: Operator component spec
                    properties:
                      defaultRuntime:
                        default: docker
                        description: Runtime defines container runtime type
                        enum:
                        - docker
                        - crio
                        - containerd
                        type: string
                      initContainer:
                        description: InitContainerSpec describes configuration for initContainer
                          image used with all components
                        properties:
                          image:
                            description: Image represents image name
                            pattern: '[a-zA-Z0-9\-]+'
                            type: string
                          imagePullPolicy:
                            description: Image pull policy
                            type: string
                          imagePullSecrets:
                            description: Image pull secrets
                            items:
                              type: string
                            type: array
                          repository:
                            description: Repository represents image repository path
                            type: string
                          version:
                            description: Version represents image tag(version)
                            type: string
                        type: object
                      runtimeClass:
                        default: nvidia
                        type: string
                    required:
                    - defaultRuntime
                    type: object
                  psp:
                    description: PSP defines spec for handling PodSecurityPolicies
                    properties:
                      enabled:
                        description: Enabled indicates if PodSecurityPolicies needs to
                          be enabled for all Pods
                        type: boolean
                    type: object
                  toolkit:
                    description: Toolkit component spec
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      enabled:
                        description: Enabled indicates if deployment of container-toolkit
                          through operator is enabled
                        type: boolean
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: Toolkit image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      repository:
                        description: Toolkit image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      version:
                        description: Toolkit image tag
                        type: string
                    type: object
                  validator:
                    description: Validator defines the spec for operator-validator daemonset
                    properties:
                      args:
                        description: 'Optional: List of arguments'
                        items:
                          type: string
                        type: array
                      cuda:
                        description: CUDA validator spec
                        properties:
                          env:
                            description: 'Optional: List of environment variables'
                            items:
                              description: EnvVar represents an environment variable present
                                in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables
                                    in the container and any service environment variables.
                                    If a variable cannot be resolved, the reference in
                                    the input string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for escaping the
                                    $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                    the string literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of whether the
                                    variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or
                                            its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in
                                            the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes,
                                            optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of
                                            the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's
                                        namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its
                                            key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      driver:
                        description: Toolkit validator spec
                        properties:
                          env:
                            description: 'Optional: List of environment variables'
                            items:
                              description: EnvVar represents an environment variable present
                                in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables
                                    in the container and any service environment variables.
                                    If a variable cannot be resolved, the reference in
                                    the input string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for escaping the
                                    $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                    the string literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of whether the
                                    variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or
                                            its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in
                                            the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes,
                                            optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of
                                            the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's
                                        namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its
                                            key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      env:
                        description: 'Optional: List of environment variables'
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a
                                C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables. If
                                a variable cannot be resolved, the reference in the input
                                string will be unchanged. Double $$ are reduced to a single
                                $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports metadata.name,
                                    metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container: only
                                    resources limits and requests (limits.cpu, limits.memory,
                                    limits.ephemeral-storage, requests.cpu, requests.memory
                                    and requests.ephemeral-storage) are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key
                                        must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: Validator image name
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy
                        type: string
                      imagePullSecrets:
                        description: Image pull secrets
                        items:
                          type: string
                        type: array
                      plugin:
                        description: Plugin validator spec
                        properties:
                          env:
                            description: 'Optional: List of environment variables'
                            items:
                              description: EnvVar represents an environment variable present
                                in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables
                                    in the container and any service environment variables.
                                    If a variable cannot be resolved, the reference in
                                    the input string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for escaping the
                                    $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                    the string literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of whether the
                                    variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or
                                            its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in
                                            the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes,
                                            optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of
                                            the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's
                                        namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its
                                            key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      repository:
                        description: Validator image repository
                        type: string
                      resources:
                        description: 'Optional: Define resources requests and limits for
                          each pod'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Optional: Security Context'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether a
                              process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag will
                              be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN Note that this field cannot be set
                              when spec.os.name is windows.'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the
                              container runtime. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes in
                              privileged containers are essentially equivalent to root
                              on the host. Defaults to false. Note that this field cannot
                              be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use
                              for the containers. The default is DefaultProcMount which
                              uses the container runtime defaults for readonly paths and
                              masked paths. This requires the ProcMountType feature flag
                              to be enabled. Note that this field cannot be set when spec.os.name
                              is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem.
                              Default is false. Note that this field cannot be set when
                              spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be set
                              in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root
                              user. If true, the Kubelet will validate the image at runtime
                              to ensure that it does not run as UID 0 (root) and fail
                              to start the container if it does. If unset or false, no
                              such validation will be performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata if
                              unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence. Note
                              that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random
                              SELinux context for each container.  May also be set in
                              PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. Note that this field cannot be set when
                              spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by this container.
                              If seccomp options are provided at both the pod & container
                              level, the container options override the pod options. Note
                              that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined
                                  in a file on the node should be used. The profile must
                                  be preconfigured on the node to work. Must be a descending
                                  path, relative to the kubelet's configured seccomp profile
                                  location. Must only be set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile
                                  will be applied. Valid options are: \n Localhost - a
                                  profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile
                                  should be used. Unconfined - no profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to all
                              containers. If unspecified, the options from the PodSecurityContext
                              will be used. If set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is
                              linux.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission
                                  webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec named
                                  by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the
                                  GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should
                                  be run as a 'Host Process' container. This field is
                                  alpha-level and will only be honored by components that
                                  enable the WindowsHostProcessContainers feature flag.
                                  Setting this field without the feature flag will result
                                  in errors when validating the Pod. All of a Pod's containers
                                  must have the same effective HostProcess value (it is
                                  not allowed to have a mix of HostProcess containers
                                  and non-HostProcess containers).  In addition, if HostProcess
                                  is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set in
                                  PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      toolkit:
                        description: Toolkit validator spec
                        properties:
                          env:
                            description: 'Optional: List of environment variables'
                            items:
                              description: EnvVar represents an environment variable present
                                in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables
                                    in the container and any service environment variables.
                                    If a variable cannot be resolved, the reference in
                                    the input string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for escaping the
                                    $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                    the string literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of whether the
                                    variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or
                                            its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in
                                            the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes,
                                            optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of
                                            the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's
                                        namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its
                                            key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      version:
                        description: Validator image tag
                        type: string
                    type: object
                required:
                - daemonsets
                - dcgm
                - dcgmExporter
                - devicePlugin
                - driver
                - gfd
                - nodeStatusExporter
                - operator
                - toolkit
                type: object
              status:
                description: ClusterPolicyStatus defines the observed state of ClusterPolicy
                properties:
                  namespace:
                    description: Namespace indicates a namespace in which the operator
                      is installed
                    type: string
                  state:
                    description: State indicates status of ClusterPolicy
                    enum:
                    - ignored
                    - ready
                    - notReady
                    type: string
                required:
                - state
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

kind: ConfigMap
metadata:
  annotations:
    note: generated
  labels:
    type: generated
  name: nvidia-clusterpolicy-crd
  namespace: default
---
apiVersion: v1
data:
  gpu-operator-components.yaml: |
    ---
    # Source: gpu-operator/templates/resources-namespace.yaml
    apiVersion: v1
    kind: Namespace
    metadata:
      name: gpu-operator-resources
      labels:
        app.kubernetes.io/component: "gpu-operator"
        openshift.io/cluster-monitoring: "true"
    ---
    # Source: gpu-operator/charts/node-feature-discovery/templates/clusterrole.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: gpu-operator-node-feature-discovery
      namespace: gpu-operator-resources
      labels:
        helm.sh/chart: node-feature-discovery-0.10.1
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: gpu-operator
        app.kubernetes.io/version: "v0.10.1"
        app.kubernetes.io/managed-by: Helm
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      # when using command line flag --resource-labels to create extended resources
      # you will need to uncomment "- nodes/status"
      # - nodes/status
      verbs:
      - get
      - patch
      - update
      - list
    - apiGroups:
      - nfd.k8s-sigs.io
      resources:
      - nodefeaturerules
      verbs:
      - get
      - list
      - watch
    ---
    # Source: gpu-operator/charts/node-feature-discovery/templates/clusterrolebinding.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: gpu-operator-node-feature-discovery
      labels:
        helm.sh/chart: node-feature-discovery-0.10.1
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: gpu-operator
        app.kubernetes.io/version: "v0.10.1"
        app.kubernetes.io/managed-by: Helm
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: gpu-operator-node-feature-discovery
    subjects:
    - kind: ServiceAccount
      name: gpu-operator-node-feature-discovery
      namespace: gpu-operator-resources
    ---
    # Source: gpu-operator/charts/node-feature-discovery/templates/master.yaml
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name:  gpu-operator-node-feature-discovery-master
      namespace: gpu-operator-resources
      labels:
        helm.sh/chart: node-feature-discovery-0.10.1
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: gpu-operator
        app.kubernetes.io/version: "v0.10.1"
        app.kubernetes.io/managed-by: Helm
        role: master
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: node-feature-discovery
          app.kubernetes.io/instance: gpu-operator
          role: master
      template:
        metadata:
          labels:
            app.kubernetes.io/name: node-feature-discovery
            app.kubernetes.io/instance: gpu-operator
            role: master
          annotations:
            {}
        spec:
          serviceAccountName: gpu-operator-node-feature-discovery
          securityContext:
            {}
          containers:
            - name: master
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              image: "registry.k8s.io/nfd/node-feature-discovery:v0.10.1"
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                  - "/usr/bin/grpc_health_probe"
                  - "-addr=:8080"
                initialDelaySeconds: 10
                periodSeconds: 10
              readinessProbe:
                exec:
                  command:
                  - "/usr/bin/grpc_health_probe"
                  - "-addr=:8080"
                initialDelaySeconds: 5
                periodSeconds: 10
                failureThreshold: 10
              ports:
              - containerPort: 8080
                name: grpc
                namespace: gpu-operator-resources
              env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              command:
                - "nfd-master"
              resources:
                {}
              args:
                - "--extra-label-ns=nvidia.com"
                ## By default, disable NodeFeatureRules controller for other than the default instances
                - "-featurerules-controller=true"
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                    - ""
                weight: 1
              - preference:
                  matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: In
                    values:
                    - ""
                weight: 1
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
              operator: Equal
              value: ""
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Equal
              value: ""
    ---
    # Source: gpu-operator/charts/node-feature-discovery/templates/nfd-worker-conf.yaml
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: gpu-operator-node-feature-discovery-worker-conf
      namespace: gpu-operator-resources
      labels:
        helm.sh/chart: node-feature-discovery-0.10.1
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: gpu-operator
        app.kubernetes.io/version: "v0.10.1"
        app.kubernetes.io/managed-by: Helm
    data:
      nfd-worker.conf: |-
        sources:
          pci:
            deviceClassWhitelist:
            - "02"
            - "0200"
            - "0207"
            - "0300"
            - "0302"
            deviceLabelFields:
            - vendor
    ---
    # Source: gpu-operator/charts/node-feature-discovery/templates/nodefeaturerule-crd.yaml
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.7.0
      creationTimestamp: null
      name: nodefeaturerules.nfd.k8s-sigs.io
      namespace: gpu-operator-resources
    spec:
      group: nfd.k8s-sigs.io
      names:
        kind: NodeFeatureRule
        listKind: NodeFeatureRuleList
        plural: nodefeaturerules
        singular: nodefeaturerule
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: NodeFeatureRule resource specifies a configuration for feature-based
              customization of node objects, such as node labeling.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: NodeFeatureRuleSpec describes a NodeFeatureRule.
                properties:
                  rules:
                    description: Rules is a list of node customization rules.
                    items:
                      description: Rule defines a rule for node customization such as
                        labeling.
                      properties:
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels to create if the rule matches.
                          type: object
                        labelsTemplate:
                          description: LabelsTemplate specifies a template to expand for
                            dynamically generating multiple labels. Data (after template
                            expansion) must be keys with an optional value (<key>[=<value>])
                            separated by newlines.
                          type: string
                        matchAny:
                          description: MatchAny specifies a list of matchers one of which
                            must match.
                          items:
                            description: MatchAnyElem specifies one sub-matcher of MatchAny.
                            properties:
                              matchFeatures:
                                description: MatchFeatures specifies a set of matcher
                                  terms all of which must match.
                                items:
                                  description: FeatureMatcherTerm defines requirements
                                    against one feature set. All requirements (specified
                                    as MatchExpressions) are evaluated against each element
                                    in the feature set.
                                  properties:
                                    feature:
                                      type: string
                                    matchExpressions:
                                      additionalProperties:
                                        description: "MatchExpression specifies an expression
                                          to evaluate against a set of input values. It
                                          contains an operator that is applied when matching
                                          the input and an array of values that the operator
                                          evaluates the input against. \n NB: CreateMatchExpression
                                          or MustCreateMatchExpression() should be used
                                          for     creating new instances. NB: Validate()
                                          must be called if Op or Value fields are modified
                                          or if a new     instance is created from scratch
                                          without using the helper functions."
                                        properties:
                                          op:
                                            description: Op is the operator to be applied.
                                            enum:
                                            - In
                                            - NotIn
                                            - InRegexp
                                            - Exists
                                            - DoesNotExist
                                            - Gt
                                            - Lt
                                            - GtLt
                                            - IsTrue
                                            - IsFalse
                                            type: string
                                          value:
                                            description: Value is the list of values that
                                              the operand evaluates the input against.
                                              Value should be empty if the operator is
                                              Exists, DoesNotExist, IsTrue or IsFalse.
                                              Value should contain exactly one element
                                              if the operator is Gt or Lt and exactly
                                              two elements if the operator is GtLt. In
                                              other cases Value should contain at least
                                              one element.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - op
                                        type: object
                                      description: MatchExpressionSet contains a set of
                                        MatchExpressions, each of which is evaluated against
                                        a set of input values.
                                      type: object
                                  required:
                                  - feature
                                  - matchExpressions
                                  type: object
                                type: array
                            required:
                            - matchFeatures
                            type: object
                          type: array
                        matchFeatures:
                          description: MatchFeatures specifies a set of matcher terms
                            all of which must match.
                          items:
                            description: FeatureMatcherTerm defines requirements against
                              one feature set. All requirements (specified as MatchExpressions)
                              are evaluated against each element in the feature set.
                            properties:
                              feature:
                                type: string
                              matchExpressions:
                                additionalProperties:
                                  description: "MatchExpression specifies an expression
                                    to evaluate against a set of input values. It contains
                                    an operator that is applied when matching the input
                                    and an array of values that the operator evaluates
                                    the input against. \n NB: CreateMatchExpression or
                                    MustCreateMatchExpression() should be used for     creating
                                    new instances. NB: Validate() must be called if Op
                                    or Value fields are modified or if a new     instance
                                    is created from scratch without using the helper functions."
                                  properties:
                                    op:
                                      description: Op is the operator to be applied.
                                      enum:
                                      - In
                                      - NotIn
                                      - InRegexp
                                      - Exists
                                      - DoesNotExist
                                      - Gt
                                      - Lt
                                      - GtLt
                                      - IsTrue
                                      - IsFalse
                                      type: string
                                    value:
                                      description: Value is the list of values that the
                                        operand evaluates the input against. Value should
                                        be empty if the operator is Exists, DoesNotExist,
                                        IsTrue or IsFalse. Value should contain exactly
                                        one element if the operator is Gt or Lt and exactly
                                        two elements if the operator is GtLt. In other
                                        cases Value should contain at least one element.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - op
                                  type: object
                                description: MatchExpressionSet contains a set of MatchExpressions,
                                  each of which is evaluated against a set of input values.
                                type: object
                            required:
                            - feature
                            - matchExpressions
                            type: object
                          type: array
                        name:
                          description: Name of the rule.
                          type: string
                        vars:
                          additionalProperties:
                            type: string
                          description: Vars is the variables to store if the rule matches.
                            Variables do not directly inflict any changes in the node
                            object. However, they can be referenced from other rules enabling
                            more complex rule hierarchies, without exposing intermediary
                            output values as labels.
                          type: object
                        varsTemplate:
                          description: VarsTemplate specifies a template to expand for
                            dynamically generating multiple variables. Data (after template
                            expansion) must be keys with an optional value (<key>[=<value>])
                            separated by newlines.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                required:
                - rules
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
    ---
    # Source: gpu-operator/charts/node-feature-discovery/templates/service.yaml
    apiVersion: v1
    kind: Service
    metadata:
      name: gpu-operator-node-feature-discovery-master
      namespace: gpu-operator-resources
      labels:
        helm.sh/chart: node-feature-discovery-0.10.1
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: gpu-operator
        app.kubernetes.io/version: "v0.10.1"
        app.kubernetes.io/managed-by: Helm
        role: master
    spec:
      type: ClusterIP
      ports:
        - port: 8080
          targetPort: grpc
          protocol: TCP
          name: grpc
          namespace: gpu-operator-resources
      selector:
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: gpu-operator
    ---
    # Source: gpu-operator/charts/node-feature-discovery/templates/serviceaccount.yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: gpu-operator-node-feature-discovery
      namespace: gpu-operator-resources
      labels:
        helm.sh/chart: node-feature-discovery-0.10.1
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: gpu-operator
        app.kubernetes.io/version: "v0.10.1"
        app.kubernetes.io/managed-by: Helm
    ---
    # Source: gpu-operator/charts/node-feature-discovery/templates/worker.yaml
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name:  gpu-operator-node-feature-discovery-worker
      namespace: gpu-operator-resources
      labels:
        helm.sh/chart: node-feature-discovery-0.10.1
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: gpu-operator
        app.kubernetes.io/version: "v0.10.1"
        app.kubernetes.io/managed-by: Helm
        role: worker
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/name: node-feature-discovery
          app.kubernetes.io/instance: gpu-operator
          role: worker
      template:
        metadata:
          labels:
            app.kubernetes.io/name: node-feature-discovery
            app.kubernetes.io/instance: gpu-operator
            role: worker
          annotations:
            {}
        spec:
          dnsPolicy: ClusterFirstWithHostNet
          serviceAccountName: gpu-operator-node-feature-discovery
          securityContext:
            {}
          containers:
          - name: worker
            securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                readOnlyRootFilesystem: true
                runAsNonRoot: true
            image: "registry.k8s.io/nfd/node-feature-discovery:v0.10.1"
            imagePullPolicy: IfNotPresent
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            resources:
                {}
            command:
            - "nfd-worker"
            args:
            - "--server=gpu-operator-node-feature-discovery-master:8080"
            volumeMounts:
            - name: host-boot
              mountPath: "/host-boot"
              readOnly: true
            - name: host-os-release
              mountPath: "/host-etc/os-release"
              readOnly: true
            - name: host-sys
              mountPath: "/host-sys"
              readOnly: true
            - name: host-usr-lib
              mountPath: "/host-usr/lib"
              readOnly: true
            - name: source-d
              mountPath: "/etc/kubernetes/node-feature-discovery/source.d/"
              readOnly: true
            - name: features-d
              mountPath: "/etc/kubernetes/node-feature-discovery/features.d/"
              readOnly: true
            - name: nfd-worker-conf
              mountPath: "/etc/kubernetes/node-feature-discovery"
              readOnly: true
          volumes:
            - name: host-boot
              hostPath:
                path: "/boot"
            - name: host-os-release
              hostPath:
                path: "/etc/os-release"
            - name: host-sys
              hostPath:
                path: "/sys"
            - name: host-usr-lib
              hostPath:
                path: "/usr/lib"
            - name: source-d
              hostPath:
                path: "/etc/kubernetes/node-feature-discovery/source.d/"
            - name: features-d
              hostPath:
                path: "/etc/kubernetes/node-feature-discovery/features.d/"
            - name: nfd-worker-conf
              configMap:
                name: gpu-operator-node-feature-discovery-worker-conf
                namespace: gpu-operator-resources
                items:
                  - key: nfd-worker.conf
                    path: nfd-worker.conf
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
              operator: Equal
              value: ""
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Equal
              value: ""
            - effect: NoSchedule
              key: nvidia.com/gpu
              operator: Equal
              value: present
    ---
    # Source: gpu-operator/templates/clusterpolicy.yaml
    apiVersion: nvidia.com/v1
    kind: ClusterPolicy
    metadata:
      name: cluster-policy
      namespace: gpu-operator-resources
      labels:
        app.kubernetes.io/component: "gpu-operator"

    spec:
      operator:
        defaultRuntime: docker
        runtimeClass: nvidia
        initContainer:
          repository: nvcr.io/nvidia
          image: cuda
          version: "11.4.2-base-ubi8"
          imagePullPolicy: IfNotPresent
      daemonsets:
        tolerations:
          - effect: NoSchedule
            key: nvidia.com/gpu
            operator: Exists
        priorityClassName: system-node-critical
      validator:
        repository: nvcr.io/nvidia/cloud-native
        image: gpu-operator-validator
        version: "v1.10.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
        plugin:
          env:
            - name: WITH_WORKLOAD
              value: "true"
      mig:
        strategy: single
      psp:
        enabled: false
      driver:
        enabled: true
        repository: nvcr.io/nvidia
        image: driver
        version: "510.47.03"
        imagePullPolicy: IfNotPresent
        rdma:
          enabled: false
          useHostMofed: false
        manager:
          repository: nvcr.io/nvidia/cloud-native
          image: k8s-driver-manager
          version: "v0.3.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: ENABLE_AUTO_DRAIN
              value: "true"
            - name: DRAIN_USE_FORCE
              value: "false"
            - name: DRAIN_POD_SELECTOR_LABEL
              value: ""
            - name: DRAIN_TIMEOUT_SECONDS
              value: 0s
            - name: DRAIN_DELETE_EMPTYDIR_DATA
              value: "false"
        repoConfig:
          configMapName: ""
        certConfig:
          name: ""
        licensingConfig:
          configMapName: ""
          nlsEnabled: false
        virtualTopology:
          config: ""
        kernelModuleConfig:
          name: ""
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
      toolkit:
        enabled: true
        repository: nvcr.io/nvidia/k8s
        image: container-toolkit
        version: "v1.9.0-ubuntu18.04"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
      devicePlugin:
        repository: nvcr.io/nvidia
        image: k8s-device-plugin
        version: "v0.11.0-ubi8"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
          - name: PASS_DEVICE_SPECS
            value: "true"
          - name: FAIL_ON_INIT_ERROR
            value: "true"
          - name: DEVICE_LIST_STRATEGY
            value: envvar
          - name: DEVICE_ID_STRATEGY
            value: uuid
          - name: NVIDIA_VISIBLE_DEVICES
            value: all
          - name: NVIDIA_DRIVER_CAPABILITIES
            value: all
      dcgm:
        enabled: false
        repository: nvcr.io/nvidia/cloud-native
        image: dcgm
        version: "2.3.4-1-ubuntu20.04"
        imagePullPolicy: IfNotPresent
        hostPort: 5555
      dcgmExporter:
        repository: nvcr.io/nvidia/k8s
        image: dcgm-exporter
        version: "2.3.4-2.6.4-ubuntu20.04"
        imagePullPolicy: IfNotPresent
        env:
          - name: DCGM_EXPORTER_LISTEN
            value: :9400
          - name: DCGM_EXPORTER_KUBERNETES
            value: "true"
          - name: DCGM_EXPORTER_COLLECTORS
            value: /etc/dcgm-exporter/dcp-metrics-included.csv
      gfd:
        repository: nvcr.io/nvidia
        image: gpu-feature-discovery
        version: "v0.5.0"
        imagePullPolicy: IfNotPresent
        env:
          - name: GFD_SLEEP_INTERVAL
            value: 60s
          - name: GFD_FAIL_ON_INIT_ERROR
            value: "true"
      migManager:
        enabled: true
        repository: nvcr.io/nvidia/cloud-native
        image: k8s-mig-manager
        version: "v0.3.0-ubuntu20.04"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
          - name: WITH_REBOOT
            value: "false"
        config:
          name: ""
        gpuClientsConfig:
          name: ""
      nodeStatusExporter:
        enabled: false
        repository: nvcr.io/nvidia/cloud-native
        image: gpu-operator-validator
        version: "v1.10.1"
        imagePullPolicy: IfNotPresent
    ---
    # Source: gpu-operator/templates/operator.yaml
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: gpu-operator
      namespace: gpu-operator-resources
      labels:
        app.kubernetes.io/component: "gpu-operator"

    spec:
      replicas: 1
      selector:
        matchLabels:

          app.kubernetes.io/component: "gpu-operator"
          app: "gpu-operator"
      template:
        metadata:
          labels:

            app.kubernetes.io/component: "gpu-operator"
            app: "gpu-operator"
          annotations:
            openshift.io/scc: restricted-readonly
        spec:
          serviceAccountName: gpu-operator
          priorityClassName: system-node-critical
          containers:
          - name: gpu-operator
            image: nvcr.io/nvidia/gpu-operator:v1.10.1
            imagePullPolicy: IfNotPresent
            command: ["gpu-operator"]
            args:
            - --leader-elect
            env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            volumeMounts:
              - name: host-os-release
                mountPath: "/host-etc/os-release"
                readOnly: true
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8081
              initialDelaySeconds: 15
              periodSeconds: 20
            readinessProbe:
              httpGet:
                path: /readyz
                port: 8081
              initialDelaySeconds: 5
              periodSeconds: 10
            resources:
              limits:
                cpu: 500m
                memory: 350Mi
              requests:
                cpu: 200m
                memory: 100Mi
            ports:
              - name: metrics
                containerPort: 8080
          volumes:
            - name: host-os-release
              hostPath:
                path: "/etc/os-release"
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                    - ""
                  matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: In
                    values:
                    - ""
                weight: 1
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
              operator: Equal
              value: ""
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Equal
              value: ""
    ---
    # Source: gpu-operator/templates/role.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      name: gpu-operator
      namespace: gpu-operator-resources
      labels:
        app.kubernetes.io/component: "gpu-operator"

    rules:
    - apiGroups:
      - config.openshift.io
      resources:
      - proxies
      verbs:
      - get
    - apiGroups:
      - rbac.authorization.k8s.io
      resources:
      - roles
      - rolebindings
      - clusterroles
      - clusterrolebindings
      verbs:
      - '*'
    - apiGroups:
      - ""
      resources:
      - pods
      - services
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
      - serviceaccounts
      - nodes
      verbs:
      - '*'
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - create
      - watch
      - update
    - apiGroups:
      - apps
      resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
      verbs:
      - '*'
    - apiGroups:
      - monitoring.coreos.com
      resources:
      - servicemonitors
      - prometheusrules
      verbs:
      - get
      - list
      - create
      - watch
      - update
    - apiGroups:
      - nvidia.com
      resources:
      - '*'
      verbs:
      - '*'
    - apiGroups:
      - scheduling.k8s.io
      resources:
      - priorityclasses
      verbs:
      - get
      - list
      - watch
      - create
    - apiGroups:
      - security.openshift.io
      resources:
      - securitycontextconstraints
      verbs:
      - '*'
    - apiGroups:
      - policy
      resources:
      - podsecuritypolicies
      verbs:
      - use
      resourceNames:
      - gpu-operator-restricted
    - apiGroups:
      - policy
      resources:
      - podsecuritypolicies
      verbs:
      - create
      - get
      - update
      - list
    - apiGroups:
      - config.openshift.io
      resources:
      - clusterversions
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      - coordination.k8s.io
      resources:
      - configmaps
      - leases
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    - apiGroups:
      - node.k8s.io
      resources:
      - runtimeclasses
      verbs:
      - get
      - list
      - create
      - update
      - watch
    - apiGroups:
      - image.openshift.io
      resources:
      - imagestreams
      verbs:
      - get
      - list
      - watch
    ---
    # Source: gpu-operator/templates/rolebinding.yaml
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: gpu-operator
      labels:
        app.kubernetes.io/component: "gpu-operator"

    subjects:
    - kind: ServiceAccount
      name: gpu-operator
      namespace: gpu-operator-resources
    - kind: ServiceAccount
      name: node-feature-discovery
      namespace: gpu-operator-resources
    roleRef:
      kind: ClusterRole
      name: gpu-operator
      apiGroup: rbac.authorization.k8s.io
    ---
    # Source: gpu-operator/templates/serviceaccount.yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: gpu-operator
      namespace: gpu-operator-resources
      labels:
        app.kubernetes.io/component: "gpu-operator"
kind: ConfigMap
metadata:
  annotations:
    note: generated
  labels:
    type: generated
  name: nvidia-gpu-operator-components
  namespace: default
